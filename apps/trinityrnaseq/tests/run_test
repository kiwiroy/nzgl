#!/bin/bash

# create links tests need to complete

PWD=`pwd`
/bin/rm read_content_analysis/target.1.ebwt 
/bin/ln -s ${PWD}/trinity_out_dir/Trinity.fasta.bowtie.1.ebwt read_content_analysis/target.1.ebwt 
/bin/rm read_content_analysis/target.2.ebwt 
/bin/ln -s ${PWD}/trinity_out_dir/Trinity.fasta.bowtie.2.ebwt read_content_analysis/target.2.ebwt 
/bin/rm read_content_analysis/target.3.ebwt 
/bin/ln -s ${PWD}/trinity_out_dir/Trinity.fasta.bowtie.3.ebwt read_content_analysis/target.3.ebwt 
/bin/rm read_content_analysis/target.4.ebwt 
/bin/ln -s ${PWD}/trinity_out_dir/Trinity.fasta.bowtie.4.ebwt read_content_analysis/target.4.ebwt 
/bin/rm read_content_analysis/target.fa 
/bin/ln -s ${PWD}/trinity_out_dir/Trinity.fasta read_content_analysis/target.fa 
/bin/rm read_content_analysis/target.fa.fai 
/bin/ln -s ${PWD}/trinity_out_dir/Trinity.fasta.fai read_content_analysis/target.fa.fai 
/bin/rm read_content_analysis/target.rev.1.ebwt 
/bin/ln -s ${PWD}/trinity_out_dir/Trinity.fasta.bowtie.rev.1.ebwt read_content_analysis/target.rev.1.ebwt 
/bin/rm read_content_analysis/target.rev.2.ebwt 
/bin/ln -s ${PWD}/trinity_out_dir/Trinity.fasta.bowtie.rev.2.ebwt read_content_analysis/target.rev.2.ebwt 

# Based on sample_data/test_Trinity_Assembly/runMe.sh script 
# shipped with Trinity

set -e

if [ -e reads.right.fq.gz ] && [ ! -e reads.right.fq ]; then
    gunzip -c reads.right.fq.gz > reads.right.fq
fi

if [ -e reads.left.fq.gz ] && [ ! -e reads.left.fq ]; then
    gunzip -c reads.left.fq.gz > reads.left.fq
fi

if [ -e reads2.right.fq.gz ] && [ ! -e reads2.right.fq ]; then
    gunzip -c reads2.right.fq.gz > reads2.right.fq
fi

if [ -e reads2.left.fq.gz ] && [ ! -e reads2.left.fq ]; then
    gunzip -c reads2.left.fq.gz > reads2.left.fq
fi

# export PATH=/home/R-network/R-3/bin:$PATH

#######################################################
##  Run Trinity to Generate Transcriptome Assemblies ##
#######################################################

## use jellyfish
/usr/bin/Trinity --seqType fq --JM 2G --left reads.left.fq.gz,reads2.left.fq.gz --right reads.right.fq.gz,reads2.right.fq.gz --SS_lib_type RF --CPU 4 --trimmomatic --normalize_reads --no_cleanup 

##### Done Running Trinity #####

#if [ ! $* ]; then
#    exit 0
#fi
#
#sleep 2

###########################################
# use RSEM to estimate read abundance  ####
###########################################

sleep 2

# first try RSEM
/usr/libexec/trinityrnaseq/util/align_and_estimate_abundance.pl --transcripts trinity_out_dir/Trinity.fasta --seqType fq --left reads.left.fq --right reads.right.fq --SS_lib_type RF --est_method RSEM --aln_method bowtie --trinity_mode --prep_reference

# try eXpress
# /usr/libexec/trinityrnaseq/util/align_and_estimate_abundance.pl --transcripts trinity_out_dir/Trinity.fasta --seqType fq --left reads.left.fq --right reads.right.fq --SS_lib_type RF --est_method eXpress --aln_method bowtie2 --trinity_mode --prep_reference

###### Done running RSEM ########

# Cleanup
/bin/rm -rf trinity_out_dir
/bin/rm reads.right.fq reads.left.fq reads2.right.fq reads2.left.fq
/bin/rm -rf bowtie.*
/bin/rm -rf RSEM.*

###### Cleaned up temporary files #######

# Based on test_Trinity_Coding_Extraction/runMe.sh

if [ -e Trinity.fasta.gz ] && [ ! -e Trinity.fasta ]
then
    gunzip -c Trinity.fasta.gz > Trinity.fasta
fi

/usr/libexec/trinityrnaseq/trinity-plugins/transdecoder/TransDecoder -t Trinity.fasta -m 50

####### Clean up temp files #######

/bin/rm Trinity.fasta
/bin/rm -rf Trinity.fasta.transdecoder.* transdecoder.tmp.*

# Taken from test_full_edgeR_pipeline/runMe.sh

# Run the pipeline
/usr/libexec/trinityrnaseq/util/run_Trinity_edgeR_pipeline.pl --samples_file ${PWD}/samples_n_reads_decribed.txt

# get assembly stats
/usr/libexec/trinityrnaseq/util/TrinityStats.pl trinity_out_dir/Trinity.fasta

# filter based on fpkm
/usr/libexec/trinityrnaseq//util/filter_fasta_by_rsem_values.pl  --rsem_output=ds_rep1.isoforms.results,hs_rep1.isoforms.results,log_rep1.isoforms.results,plat_rep1.isoforms.results --fasta=trinity_out_dir/Trinity.fasta --fpkm_cutoff=0.1 --output=filtered.fasta

# run bowtie alignment to examine read mapping stats:
/usr/libexec/trinityrnaseq/util/bowtie_PE_separate_then_join.pl  --seqType fq --left reads.ALL.left.fq --right reads.ALL.right.fq --aligner bowtie --output read_content_analysis --target trinity_out_dir/Trinity.fasta -- -p 4 --all --best --strata -m 300

# examine read mapping stats:
/usr/libexec/trinityrnaseq/util/SAM_nameSorted_to_uniq_count_stats.pl read_content_analysis/read_content_analysis.nameSorted.bam

# Cleanup
/bin/rm -rf trinity_out_dir
/bin/rm reads.ALL.right.* reads.ALL.left.*
/bin/rm -rf TRANS* RSEM*
/bin/rm -rf ds_rep1* hs_rep1* log_rep1* plat_rep1* Trinity_trans* Trinity.trans_lengths.txt __tmp_runTMM.R edgeR_trans
/bin/rm -rf edgeR_components/
/bin/rm -rf edgeR_genes/
/bin/rm -rf collectl
/bin/rm -rf Trinity.fasta.transdecoder.* transdecoder.tmp.*
/bin/rm -rf Trinity_genes.*
/bin/rm -rf filtered.*
/bin/rm read_content_analysis/target.1.ebwt 
/bin/rm read_content_analysis/target.2.ebwt 
/bin/rm read_content_analysis/target.3.ebwt 
/bin/rm read_content_analysis/target.4.ebwt 
/bin/rm read_content_analysis/target.fa 
/bin/rm read_content_analysis/target.fa.fai 
/bin/rm read_content_analysis/target.rev.1.ebwt 
/bin/rm read_content_analysis/target.rev.2.ebwt 

exit 0
