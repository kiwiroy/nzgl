.TH "lslib" 3 "3 Sep 2009" "Version 7.0" "Platform LSF 7.0.6 C API Reference" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lslib \- lslib 
Application Programming Interface (API) library routines for LSF services
.PP
LSLIB routines allow application programs to contact the Load Information Manager (LIM) and Remote Execution Server (RES) daemons in order to obtain LSF services. These services include obtaining static system configuration information and dynamic load information for the hosts in distributed clusters, obtaining task placement advice from LIM, executing tasks (UNIX processes) on remote hosts with a high degree of transparency using RES, remote file operations across hosts that do not share file systems, performing remote terminal I/O and signal operations, and other related functions. You can build distributed applications on top of LSLIB to effectively exploit the resources available on the network, improving application performance and resource accessibility.
.PP
Library routines for obtaining load sharing cluster configuration information. 
.PD 0

.IP "\(bu" 2
\fBls_info\fP 
.IP "\(bu" 2
\fBls_getclustername\fP 
.IP "\(bu" 2
\fBls_getmastername\fP 
.IP "\(bu" 2
\fBls_getmodelfactor\fP
.PP

.br
.PP
Library routines for obtaining host configuration information. 
.PD 0

.IP "\(bu" 2
\fBls_gethosttype\fP 
.IP "\(bu" 2
\fBls_gethostmodel\fP 
.IP "\(bu" 2
\fBls_gethostfactor\fP 
.IP "\(bu" 2
\fBls_gethostinfo\fP
.PP

.br
.PP
Library routines for obtaining host load information. An application can use this information to make task placement decisions instead of using LIM's. 
.PD 0

.IP "\(bu" 2
\fBls_loadinfo\fP 
.IP "\(bu" 2
\fBls_load\fP 
.IP "\(bu" 2
\fBls_loadofhosts\fP 
.IP "\(bu" 2
\fBls_sharedresourceinfo\fP
.PP

.br
.PP
Library routines implementing LIM's task placement policy. These routines include calls to obtain task placement information, and calls to adjust host load measures. 
.PD 0

.IP "\(bu" 2
\fBls_placereq\fP 
.IP "\(bu" 2
\fBls_placeofhosts\fP 
.IP "\(bu" 2
\fBls_loadadj\fP
.PP

.br
.PP
Library routines for displaying and manipulating the local and remote task lists. These lists specify the eligibility of various types of tasks for remote execution, and their resource requirement characteristics. 
.PD 0

.IP "\(bu" 2
\fBls_eligible\fP 
.IP "\(bu" 2
\fBls_listrtask\fP 
.IP "\(bu" 2
\fBls_listltask\fP 
.IP "\(bu" 2
\fBls_insertrtask\fP 
.IP "\(bu" 2
\fBls_insertltask\fP 
.IP "\(bu" 2
\fBls_deletertask\fP 
.IP "\(bu" 2
\fBls_deleteltask\fP
.PP

.br
.PP
\fBREMOTE EXECUTION\fP 
.br
.PP
Library routines related to remote execution, including initiation, connection and remote environment manipulation.
.PP

.br
Library routines for establishing and querying remote connections. 
.PD 0

.IP "\(bu" 2
\fBls_connect\fP 
.IP "\(bu" 2
\fBls_isconnected\fP 
.IP "\(bu" 2
\fBls_findmyconnections\fP
.PP

.br
.PP
Library routines for executing remote tasks. 
.PD 0

.IP "\(bu" 2
\fBls_rexecv\fP 
.IP "\(bu" 2
\fBls_rexecve\fP 
.IP "\(bu" 2
\fBls_rtask\fP 
.IP "\(bu" 2
\fBls_rtaske\fP
.PP

.br
.PP
Library routines for querying and manipulating stdin for remote tasks. 
.PD 0

.IP "\(bu" 2
\fBls_stdinmode\fP 
.IP "\(bu" 2
\fBls_getstdin\fP 
.IP "\(bu" 2
\fBls_setstdin\fP
.PP

.br
.PP
Wait for a remote or local task, then return its status. 
.PD 0

.IP "\(bu" 2
\fBls_rwait\fP 
.IP "\(bu" 2
\fBls_rwaittid\fP
.PP

.br
.PP
Library routines for operations on files on remote hosts. 
.PD 0

.IP "\(bu" 2
\fBls_ropen\fP 
.IP "\(bu" 2
\fBls_rread\fP 
.IP "\(bu" 2
\fBls_rwrite\fP 
.IP "\(bu" 2
\fBls_rlseek\fP 
.IP "\(bu" 2
\fBls_rclose\fP 
.IP "\(bu" 2
\fBls_rstat\fP 
.IP "\(bu" 2
\fBls_rfstat\fP 
.IP "\(bu" 2
\fBls_rgetmnthost\fP 
.IP "\(bu" 2
\fBls_rfcontrol\fP
.PP

.br
.PP
Library routine for load sharing error messages. 
.PD 0

.IP "\(bu" 2
\fBls_perror\fP 
.IP "\(bu" 2
\fBls_sysmsg\fP 
.IP "\(bu" 2
\fBls_errlog\fP
.PP

.br
.PP
Library routines for administering and controlling the LSF system. 
.PD 0

.IP "\(bu" 2
\fBls_limcontrol\fP 
.IP "\(bu" 2
\fBls_lockhost\fP 
.IP "\(bu" 2
\fBls_unlockhost\fP
.PP
.PP
.PP
.SH "Note:"
.PP
All LSLIB routines require that the LSF header file <lsf/lsf.h> be included. 
.PP
Many LSLIB APIs return a pointer to an array or structure. These data structures are in static storage or on the heap. The next time the routine is called, the storage is overwritten or freed. 
.PP
Any program using LSLIB routines that change the state of the LSF system must be setuid to root if LSF_AUTH is not defined in the lsf.conf file. 
.PP
Any program using LSLIB routines for remote execution services or for operations on files on remote hosts must call ls_initrex() before calling any of the other routines. 
.PP
On systems which have both System V and BSD programming interfaces, LSLIB typically requires the BSD programming interface. On System V-based versions of UNIX, for example SGI IRIX, it is normally necessary to link applications using LSLIB with the BSD compatibility library. 
.PP
On AFS systems, the following needs to be added to the end of your linkage specifications when linking with LSLIB (assuming your AFS library path is /usr/afsws): 
.PP
For HP-UX and Solaris, 
.PP
-lc -L/usr/afsws/lib -L/usr/afsws/lib/afs -lsys -lrx -llwp /usr/afsws/lib/afs/util.a 
.PP
For other platforms, 
.PP
-lc -L/usr/afsws/lib -L/usr/afsws/lib/afs -lsys -lrx -llwp
.PP
.SH "Files:" 
.PP
${LSF_ENVDIR:-/etc}/lsf.conf 
.br
 $LSF_CONFDIR/lsf.shared 
.br
 $LSF_CONFDIR/lsf.cluster.cluster_name 
.br
 $LSF_CONFDIR/lsf.task 
.br
 $LSF_CONFDIR/lsf.task.cluster_name
.PP
.SH "See also:"
\fBls_chdir\fP 
.PP
\fBls_clusterinfo\fP 
.PP
\fBls_connect\fP 
.PP
\fBls_conntaskport\fP 
.PP
\fBls_deleteltask\fP 
.PP
\fBls_deletertask\fP 
.PP
\fBls_donerex\fP 
.PP
\fBls_eligible\fP 
.PP
\fBls_errlog\fP 
.PP
\fBls_fdbusy\fP 
.PP
\fBls_findmyconnections\fP 
.PP
\fBls_getacctrec\fP 
.PP
\fBls_getclustername\fP 
.PP
\fBls_gethostfactor\fP 
.PP
\fBls_gethostinfo\fP 
.PP
\fBls_gethostmodel\fP 
.PP
\fBls_gethosttype\fP 
.PP
\fBls_getmastername\fP 
.PP
\fBls_getmnthost\fP 
.PP
\fBls_getmodelfactor\fP 
.PP
\fBls_getmyhostname\fP 
.PP
\fBls_getmyhostname2\fP 
.PP
\fBls_getstdin\fP 
.PP
\fBls_info\fP 
.PP
\fBls_initrex\fP 
.PP
\fBls_insertltask\fP 
.PP
\fBls_insertrtask\fP 
.PP
\fBls_isconnected\fP 
.PP
\fBls_limcontrol\fP 
.PP
\fBls_listltask\fP 
.PP
\fBls_listrtask\fP 
.PP
\fBls_load\fP 
.PP
\fBls_loadadj\fP 
.PP
\fBls_loadinfo\fP 
.PP
\fBls_loadofhosts\fP 
.PP
\fBls_lockhost\fP 
.PP
\fBls_perror\fP 
.PP
\fBls_placeofhosts\fP 
.PP
\fBls_placereq\fP 
.PP
\fBls_rclose\fP 
.PP
\fBls_readconfenv\fP 
.PP
\fBls_rescontrol\fP 
.PP
\fBls_resreq\fP 
.PP
\fBls_rexecv\fP 
.PP
\fBls_rexecve\fP 
.PP
\fBls_rfcontrol\fP 
.PP
\fBls_rfstat\fP 
.PP
\fBls_rfterminate\fP 
.PP
\fBls_rgetmnthost\fP 
.PP
\fBls_rkill\fP 
.PP
\fBls_rlseek\fP 
.PP
\fBls_ropen\fP 
.PP
\fBls_rread\fP 
.PP
\fBls_rsetenv\fP 
.PP
\fBls_rstat\fP 
.PP
\fBls_rtask\fP 
.PP
\fBls_rtaske\fP 
.PP
\fBls_rwait\fP 
.PP
\fBls_rwaittid\fP 
.PP
\fBls_rwrite\fP 
.PP
\fBls_setstdin\fP 
.PP
\fBls_sharedresourceinfo\fP 
.PP
\fBls_stdinmode\fP 
.PP
\fBls_stoprex\fP 
.PP
\fBls_sysmsg\fP 
.PP
\fBls_unlockhost\fP 
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Platform LSF 7.0.6 C API Reference from the source code.
