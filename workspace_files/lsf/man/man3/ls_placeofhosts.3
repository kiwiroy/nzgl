.TH "ls_placeofhosts" 3 "3 Sep 2009" "Version 7.0" "Platform LSF 7.0.6 C API Reference" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls_placeofhosts \- ls_placeofhosts 
Returns the most suitable host() for the task() from a set of candidate hosts with regards to current load conditions and the task's resource requirements.
.PP
\fBls_placeofhosts\fP sends a task placement request to the LIM. The LIM returns a set of most suitable host() for the task(), taking into account the current load conditions and the task's resource requirements. Hostnames may be duplicated for hosts that have sufficient resources to accept multiple tasks (for example, multiprocessors).
.PP
If \fBls_placeofhosts\fP is successful, an array of host names is returned and *num is set to reflect the number of returned hosts. Otherwise, \fBls_placeofhosts\fP returns NULL and sets lserrno to indicate the error.
.PP
The routine returns a pointer to a dynamically allocated array of strings which can be freed in subsequent calls.
.PP
\fB#include <lsf/lsf.h>\fP
.PP
\fB char **ls_placeofhosts(char *resreq, int *num, int options, char *fromhost, char **hostlist, int listsize)\fP
.PP
.SH "Parameters:"
\fI*resreq\fP resreq is a resource requirement expression that characterizes the resource needs of a single task. You can retrieve this parameter by calling \fBls_eligible\fP or the application can supply its own. See Administering Platform LSF for more information about resource requirement expressions. The names used for resource requirements are defined by the LSF administrator in the configuration file LSF_CONFDIR/lsf.shared. You can obtain the available resource names by calling \fBls_info\fP or running the LSF utility program lsinfo(). If resreq is NULL, then the default is assumed, which is to require a host of the same type as the local host with low 1-minute average CPU queue length and paging rate.
.br
\fI*num\fP *num is the number of hosts requested. If *num is zero, then all eligible hosts are requested. If *num is NULL, then a single host is requested.
.br
\fIoptions\fP options is constructed from the bitwise inclusive OR of zero or more of the flags that are defined in <lsf/lsf.h>. These flags are documented in \fBoptions_ls_load\fP
.br
\fI*fromhost\fP fromhost is the host from which the task originates when LIM makes the placement decision. Preference is given to fromhost over remote hosts that do not have significantly lighter loads or greater resources. This preference avoids unnecessary task transfer and reduces overhead. If fromhost is NULL, then the local host is assumed.
.br
\fI**hostlist\fP Specifies a list of candidate hosts from which \fBls_placeofhosts\fP can choose suitable hosts.
.br
\fIlistsize\fP The number of host entry in hostlist.
.PP
.SH "Data Structures:" 
.PP
none 
.br
.PP
.SH "Define Statements:" 
.PP
\fBoptions_ls_load\fP
.PP
.SH "Returns:"
char **:An array of host names is returned. 
.br
 Function was successful. 
.PP
NULL 
.br
 Function failed.
.PP
.SH "Errors:" 
.PP
If the function fails, lserrno is set to indicate the error.
.PP
.SH "Equivalent line commands:" 
.PP
none
.PP
.SH "Files:" 
.PP
none
.PP
.SH "See also:"
\fBls_placereq\fP 
.PP
\fBls_loadadj\fP 
.PP
\fBls_eligible\fP 
.PP
\fBls_info\fP 
.PP
\fBls_load\fP 
.PP

.ad l
.nh
.SH NAME
options_ls_load \- define statements used by \fBls_load\fP.  

.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBEXACT\fP   0x01"
.br
.ti -1c
.RI "#define \fBOK_ONLY\fP   0x02"
.br
.ti -1c
.RI "#define \fBNORMALIZE\fP   0x04"
.br
.ti -1c
.RI "#define \fBLOCALITY\fP   0x08"
.br
.ti -1c
.RI "#define \fBIGNORE_RES\fP   0x10"
.br
.ti -1c
.RI "#define \fBLOCAL_ONLY\fP   0x20"
.br
.ti -1c
.RI "#define \fBDFT_FROMTYPE\fP   0x40"
.br
.ti -1c
.RI "#define \fBALL_CLUSTERS\fP   0x80"
.br
.ti -1c
.RI "#define \fBEFFECTIVE\fP   0x100"
.br
.ti -1c
.RI "#define \fBRECV_FROM_CLUSTERS\fP   0x200"
.br
.ti -1c
.RI "#define \fBNEED_MY_CLUSTER_NAME\fP   0x400"
.br
.ti -1c
.RI "#define \fBSEND_TO_CLUSTERS\fP   0x400"
.br
.ti -1c
.RI "#define \fBNO_SORT\fP   0x800"
.br
.ti -1c
.RI "#define \fBEXCLUSIVE_RESOURCE\fP   0x1000"
.br
.ti -1c
.RI "#define \fBDT_CLUSTER_LOAD\fP   0x2000"
.br
.in -1c
.SH "Detailed Description"
.PP 
define statements used by \fBls_load\fP. 
.SH "Define Documentation"
.PP 
.SS "#define EXACT   0x01"
.PP
Exactly *numhosts hosts are desired. 
.PP
If EXACT is set, either exactly *numhosts hosts are returned, or the call returns an error. If EXACT is not set, then up to *numhosts hosts are returned. If *numhosts is zero, then the EXACT flag is ignored and as many hosts in the load sharing system as are eligible (that is, those that satisfy the resource requirements) are returned. 
.SS "#define OK_ONLY   0x02"
.PP
Return only those hosts that are currently in the `ok' state. 
.PP
If OK_ONLY is set, those hosts that are busy, locked, or unavail are not returned. If OK_ONLY is not set, then some or all of the hosts whose status are not `ok' may also be returned, depending on the value of numhosts and whether the EXACT flag is set. 
.SS "#define NORMALIZE   0x04"
.PP
Normalize CPU load indices. 
.PP
If NORMALIZE is set, then the CPU run queue length load indices r15s, r1m, and r15m of each host returned are normalized. See Administering Platform LSF for the concept of normalized queue length. Default is to return the raw queue length. The options EFFECTIVE and NORMALIZE are mutually exclusive. 
.SS "#define LOCALITY   0x08"
.PP
The locality of the hosts. 
.PP
.SS "#define IGNORE_RES   0x10"
.PP
Ignore the status of RES when determining the hosts that are considered to be `ok'. 
.PP
If IGNORE_RES is specified, then hosts with RES not running are also considered to be `ok' during host selection. 
.SS "#define LOCAL_ONLY   0x20"
.PP
Local cluster only. 
.PP
.SS "#define DFT_FROMTYPE   0x40"
.PP
Return hosts with the same type as the fromhost which satisfy the resource requirements. 
.PP
By default all host types are considered. 
.SS "#define ALL_CLUSTERS   0x80"
.PP
All clusters. 
.PP
.SS "#define EFFECTIVE   0x100"
.PP
If EFFECTIVE is set, then the CPU run queue length load indices of each host returned are effective load. 
.PP
See Administering Platform LSF for the concept of effective queue length. Default is to return the raw queue length. The options EFFECTIVE and NORMALIZE are mutually exclusive. 
.SS "#define RECV_FROM_CLUSTERS   0x200"
.PP
Only return info about clusters I can receive job from. 
.PP
.SS "#define NEED_MY_CLUSTER_NAME   0x400"
.PP
Need my cluster name. 
.PP
.SS "#define SEND_TO_CLUSTERS   0x400"
.PP
Only return info about clusters I can send job to. 
.PP
.SS "#define NO_SORT   0x800"
.PP
No host sorting is needed. 
.PP
.SS "#define EXCLUSIVE_RESOURCE   0x1000"
.PP
Exclusive resource definition enforcement. 
.PP
.SS "#define DT_CLUSTER_LOAD   0x2000"
.PP
Desktop cluster return unlicensed hosts load info. 
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for Platform LSF 7.0.6 C API Reference from the source code.
