.TH "glb_param" 3 "3 Sep 2009" "Version 7.0" "Platform LSF 7.0.6 C API Reference" \" -*- nroff -*-
.ad l
.nh
.SH NAME
glb_param \- glb_param 
Returns an array of parameters of the specified License Scheduler daemon.
.PP
\fBglb_param\fP gets an array of \fBglbParams\fP structures which contains all the parameters associated with the specified License Scheduler daemon.
.PP
\fB #include <glb/glb.h>\fP
.PP
\fB struct \fBglbParams\fP *glb_param(struct \fBglbHandle\fP *h2) \fP
.PP
.SH "Parameters:"
\fI*h2\fP The \fBglbHandle\fP structure that specifies the License Scheduler daemon.
.PP
.SH "Data Structures:" 
.PP
\fBglbHandle\fP 
.br
\fBglbParams\fP
.PP
.SH "Define Statements:" 
.PP
none
.PP
.SH "Returns:"
*glbParams 
.br
 An array of internal parameters associated with the License Scheduler daemon.
.PP
.SH "Errors:" 
.PP
On failure, glberrno is set to indicate the error.
.PP
.SH "Equivalent line commands:" 
.PP
none
.PP
.SH "Files:" 
.PP
none
.PP
.SH "See also:"
\fBglb_info\fP 
.PP
\fBglb_jobinfo\fP 
.PP
\fBglb_perror\fP 
.PP
\fBglb_userinfo\fP 
.PP
\fBglb_workloadinfo\fP 
.PP

.ad l
.nh
.SH NAME
glbHandle \- This handle represent a live connection to globd.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "char * \fBname\fP"
.br
.ti -1c
.RI "int \fBhandle\fP"
.br
.ti -1c
.RI "struct sockaddr_storage \fBglobd\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This handle represent a live connection to globd. 

The API and the globd communicate over a TCP/IP connection. The handle member name holds the authentication informations needed by globd to authorise token withdraw from a project by a connected client, LSF mbatchd or taskman. Only the API that requests tokens, glb_gettokens() and the administrative API glb_admin() need to set the name member because they require authentication. Other API do not need to manage the handle explicitly. 
.SH "Field Documentation"
.PP 
.SS "char* \fBglbHandle::name\fP"
.PP
client name 
.PP
.SS "int \fBglbHandle::handle\fP"
.PP
channel handle 
.PP
.SS "struct sockaddr_storage \fBglbHandle::globd\fP"
.PP
details socket information 
.PP


.ad l
.nh
.SH NAME
glbParams \- These are the GLB internal parameters that control the globd behaviour, e.g.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "int \fBglobPort\fP"
.br
.ti -1c
.RI "char * \fBhost\fP"
.br
.ti -1c
.RI "char * \fBlogMask\fP"
.br
.ti -1c
.RI "char * \fBlogEvent\fP"
.br
.ti -1c
.RI "char * \fBadminName\fP"
.br
.ti -1c
.RI "char * \fBlogDir\fP"
.br
.ti -1c
.RI "char * \fBworkDir\fP"
.br
.ti -1c
.RI "int \fBlogInterval\fP"
.br
.ti -1c
.RI "int \fBlmStatInterval\fP"
.br
.ti -1c
.RI "char * \fBlicfile\fP"
.br
.ti -1c
.RI "char * \fBvCommand\fP"
.br
.ti -1c
.RI "int \fBlmremoveInterval\fP"
.br
.ti -1c
.RI "int \fBmaxtasks\fP"
.br
.ti -1c
.RI "int \fBextfilterPort\fP"
.br
.ti -1c
.RI "char * \fBflxLicfile\fP"
.br
.ti -1c
.RI "int \fBbottomUp\fP"
.br
.ti -1c
.RI "char * \fBdebugBld\fP"
.br
.ti -1c
.RI "int \fBenableMaxPreempt\fP"
.br
.ti -1c
.RI "int \fBmaxTaskmanPreempt\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
These are the GLB internal parameters that control the globd behaviour, e.g. 

how often it calls the license server, at which ports it listen for incoming requests etc. This data structure is returned by the \fBglb_param\fP API. 
.SH "Field Documentation"
.PP 
.SS "int \fBglbParams::globPort\fP"
.PP
port of GLOB 
.PP
.SS "char* \fBglbParams::host\fP"
.PP
host 
.PP
.SS "char* \fBglbParams::logMask\fP"
.PP
log mask 
.PP
.SS "char* \fBglbParams::logEvent\fP"
.PP
log event 
.PP
.SS "char* \fBglbParams::adminName\fP"
.PP
admin 
.PP
.SS "char* \fBglbParams::logDir\fP"
.PP
log dir 
.PP
.SS "char* \fBglbParams::workDir\fP"
.PP
work dir 
.PP
.SS "int \fBglbParams::logInterval\fP"
.PP
log interval 
.PP
.SS "int \fBglbParams::lmStatInterval\fP"
.PP
lmStat interval 
.PP
.SS "char* \fBglbParams::licfile\fP"
.PP
license file 
.PP
.SS "char* \fBglbParams::vCommand\fP"
.PP
vCommand 
.PP
.SS "int \fBglbParams::lmremoveInterval\fP"
.PP
lmremove interval 
.PP
.SS "int \fBglbParams::maxtasks\fP"
.PP
max tasks 
.PP
.SS "int \fBglbParams::extfilterPort\fP"
.PP
external filter port 
.PP
.SS "char* \fBglbParams::flxLicfile\fP"
.PP
flex license file 
.PP
.SS "int \fBglbParams::bottomUp\fP"
.PP
bottomUp 
.PP
.SS "char* \fBglbParams::debugBld\fP"
.PP
log classes 
.PP
.SS "int \fBglbParams::enableMaxPreempt\fP"
.PP
value of LS_ENABLE_MAX_PREEMPT 
.PP
.SS "int \fBglbParams::maxTaskmanPreempt\fP"
.PP
value of LS_MAX_TASKMAN_PREEMPT 
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Platform LSF 7.0.6 C API Reference from the source code.
