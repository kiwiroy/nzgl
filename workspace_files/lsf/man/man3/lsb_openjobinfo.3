.TH "lsb_openjobinfo" 3 "3 Sep 2009" "Version 7.0" "Platform LSF 7.0.6 C API Reference" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lsb_openjobinfo \- lsb_openjobinfo 
Returns the number of jobs in the master batch daemon.
.PP
\fBlsb_openjobinfo\fP accesses information about pending, running and suspended jobs in the master batch daemon. Use \fBlsb_openjobinfo\fP to create a connection to the master batch daemon. Next, use \fBlsb_readjobinfo\fP to read job records.Close the connection using \fBlsb_closejobinfo\fP.
.PP
\fBlsb_openjobinfo\fP opens a connection with mbatchd and returns the total number of records in the connection on success.
.PP
\fB#include <lsf/lsbatch.h>\fP
.PP
\fB int lsb_openjobinfo(LS_LONG_INT jobId, char *jobName, char *userName, char *queueName, char *hostName, int options)\fP
.PP
.SH "Parameters:"
\fIjobId\fP Passes information about jobs with the given job ID. If jobId is 0, \fBlsb_openjobinfo\fP looks to another parameter to return information about jobs.If a member of a job array is to be passed, use the array form jobID[ i ] where jobID is the job array name, and i is the index value. 
.br
\fI*jobName\fP Passes information about jobs with the given job name. If jobName is NULL, \fBlsb_openjobinfo\fP looks to another parameter to return information about jobs. 
.br
\fI*userName\fP Passes information about jobs submitted by the named user or user group, or by all users if user is all. If user is NULL, \fBlsb_openjobinfo\fP assumes the user is invoking this call. 
.br
\fI*queueName\fP Passes information about jobs belonging to the named queue. If queue is NULL,jobs in all the queues of the batch system are counted. 
.br
\fI*hostName\fP Passes information about jobs on the named host, host group or cluster name. If host is NULL, jobs on all hosts of the batch system will be considered. 
.br
\fIoptions\fP <lsf/lsbatch.h> defines the flags shown in \fBdefs_lsb_openjobinfo\fP constructed from bits. Use the bitwise OR to set more than one flag.
.PP
.SH "Data Structures:" 
.PP
none
.PP
.SH "Define Statements:" 
.PP
\fBdefs_lsb_openjobinfo_a\fP 
.br
\fBdefs_lsb_openjobinfo\fP
.PP
.SH "Returns:"
int:value 
.br
 The total number of records in the connection. 
.PP
int:-1 
.br
 The function failed.
.PP
.SH "Errors:" 
.PP
If the function fails, lsberrno is set to indicate the error.
.PP
.SH "Equivalent line command:" 
.PP
bjobs
.PP
.SH "Files:" 
.PP
${LSF_ENVDIR:-/etc}/lsf.conf
.PP
.SH "See also:"
\fBlsb_openjobinfo_a\fP 
.PP
\fBlsb_openjobinfo_a_ext\fP 
.PP
\fBlsb_openjobinfo_req\fP 
.PP
\fBlsb_closejobinfo\fP 
.PP
\fBlsb_readjobinfo\fP 
.PP
\fBlsb_readframejob\fP 
.PP

.ad l
.nh
.SH NAME
defs_lsb_openjobinfo_a \- defs_lsb_openjobinfo_a is part of defs_lsb_openjobinfo  

.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBALL_JOB\fP   0x0001"
.br
.ti -1c
.RI "#define \fBDONE_JOB\fP   0x0002"
.br
.ti -1c
.RI "#define \fBPEND_JOB\fP   0x0004"
.br
.ti -1c
.RI "#define \fBSUSP_JOB\fP   0x0008"
.br
.ti -1c
.RI "#define \fBCUR_JOB\fP   0x0010"
.br
.ti -1c
.RI "#define \fBLAST_JOB\fP   0x0020"
.br
.in -1c
.SH "Detailed Description"
.PP 
defs_lsb_openjobinfo_a is part of defs_lsb_openjobinfo 
.SH "Define Documentation"
.PP 
.SS "#define ALL_JOB   0x0001"
.PP
Information about all jobs, including unfinished jobs (pending, running or suspended) and recently finished jobs. 
.PP
LSF remembers jobs finished within the preceding period. This period is set by the parameter CLEAN_PERIOD in the lsb.params file. The default is 3600 seconds (1 hour). (See lsb.params). The command line equivalent is bjobs -a. 
.SS "#define DONE_JOB   0x0002"
.PP
Information about recently finished jobs. 
.PP

.SS "#define PEND_JOB   0x0004"
.PP
Information about pending jobs. 
.PP

.SS "#define SUSP_JOB   0x0008"
.PP
Information about suspended jobs. 
.PP

.SS "#define CUR_JOB   0x0010"
.PP
Information about all unfinished jobs. 
.PP

.SS "#define LAST_JOB   0x0020"
.PP
Information about the last submitted job. 
.PP

.ad l
.nh
.SH NAME
defs_lsb_openjobinfo \- Information options about job.  

.PP
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBdefs_lsb_openjobinfo_a\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBALL_USERS\fP   'all'"
.br
.ti -1c
.RI "#define \fBRUN_JOB\fP   0x0040"
.br
.ti -1c
.RI "#define \fBJOBID_ONLY\fP   0x0080"
.br
.ti -1c
.RI "#define \fBHOST_NAME\fP   0x0100"
.br
.ti -1c
.RI "#define \fBNO_PEND_REASONS\fP   0x0200"
.br
.ti -1c
.RI "#define \fBJGRP_INFO\fP   0x0400"
.br
.ti -1c
.RI "#define \fBJGRP_RECURSIVE\fP   0x0800"
.br
.ti -1c
.RI "#define \fBJGRP_ARRAY_INFO\fP   0x1000"
.br
.ti -1c
.RI "#define \fBJOBID_ONLY_ALL\fP   0x02000"
.br
.ti -1c
.RI "#define \fBZOMBIE_JOB\fP   0x04000"
.br
.ti -1c
.RI "#define \fBTRANSPARENT_MC\fP   0x08000"
.br
.ti -1c
.RI "#define \fBEXCEPT_JOB\fP   0x10000"
.br
.ti -1c
.RI "#define \fBMUREX_JOB\fP   0x20000"
.br
.ti -1c
.RI "#define \fBTO_SYM_UA\fP   0x40000"
.br
.ti -1c
.RI "#define \fBSYM_TOP_LEVEL_ONLY\fP   0x80000"
.br
.ti -1c
.RI "#define \fBJGRP_NAME\fP   0x100000"
.br
.ti -1c
.RI "#define \fBCOND_HOSTNAME\fP   0x200000"
.br
.ti -1c
.RI "#define \fBFROM_BJOBSCMD\fP   0x400000"
.br
.ti -1c
.RI "#define \fBWITH_LOPTION\fP   0x800000"
.br
.ti -1c
.RI "#define \fBAPS_JOB\fP   0x1000000"
.br
.ti -1c
.RI "#define \fBUGRP_INFO\fP   0x2000000"
.br
.ti -1c
.RI "#define \fBTIME_LEFT\fP   0x4000000"
.br
.ti -1c
.RI "#define \fBFINISH_TIME\fP   0x8000000"
.br
.ti -1c
.RI "#define \fBCOM_PERCENTAGE\fP   0x10000000"
.br
.in -1c
.SH "Detailed Description"
.PP 
Information options about job. 
.SH "Define Documentation"
.PP 
.SS "#define ALL_USERS   'all'"
.PP
Reserved user name. 
.PP
.SS "#define RUN_JOB   0x0040"
.PP
Information about all running jobs. 
.PP
.SS "#define JOBID_ONLY   0x0080"
.PP
Information about JobId only. 
.PP

.SS "#define HOST_NAME   0x0100"
.PP
Internal use only. 
.PP

.SS "#define NO_PEND_REASONS   0x0200"
.PP
Exclude pending jobs. 
.PP

.SS "#define JGRP_INFO   0x0400"
.PP
Return group info structures. 
.PP
.SS "#define JGRP_RECURSIVE   0x0800"
.PP
Recursively search job group tree. 
.PP
.SS "#define JGRP_ARRAY_INFO   0x1000"
.PP
Return job array info structures. 
.PP
.SS "#define JOBID_ONLY_ALL   0x02000"
.PP
All jobs in the core. 
.PP
.SS "#define ZOMBIE_JOB   0x04000"
.PP
All zombie jobs. 
.PP
.SS "#define TRANSPARENT_MC   0x08000"
.PP
Display remote jobs by their submission jobid. 
.PP

.SS "#define EXCEPT_JOB   0x10000"
.PP
Exceptional jobs. 
.PP
.SS "#define MUREX_JOB   0x20000"
.PP
Display for murex jobs. 
.PP
.SS "#define TO_SYM_UA   0x40000"
.PP
To symphony UA. 
.PP
.SS "#define SYM_TOP_LEVEL_ONLY   0x80000"
.PP
Only show top-level symphony job. 
.PP
.SS "#define JGRP_NAME   0x100000"
.PP
For internal use only. 
.PP
.SS "#define COND_HOSTNAME   0x200000"
.PP
Condensed host group. 
.PP
.SS "#define FROM_BJOBSCMD   0x400000"
.PP
Called from command, for internal use only. 
.PP
.SS "#define WITH_LOPTION   0x800000"
.PP
-l in command parameter, for internal use only 
.PP
.SS "#define APS_JOB   0x1000000"
.PP
Jobs submitted to aps queue. 
.PP
.SS "#define UGRP_INFO   0x2000000"
.PP
Information about user group. 
.PP

.SS "#define TIME_LEFT   0x4000000"
.PP
RFC#1531: -G option support. 
.PP
-WL Estimated time remaining based on the runtime estimate or runlimit. 
.SS "#define FINISH_TIME   0x8000000"
.PP
Estimated finish time based on the runtime estimate or runlimit. 
.PP

.SS "#define COM_PERCENTAGE   0x10000000"
.PP
Estimated completion percentage based on the runtime estimate or runlimit. 
.PP
If options is 0, default to CUR_JOB. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Platform LSF 7.0.6 C API Reference from the source code.
