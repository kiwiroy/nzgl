.\"$Id: parScripts.1,v 5.5 1998/07/27 16:33:45 bzhang Exp $
.ds ]W %
.ds ]L
.TH parScripts 1 "1 August 1998"
.SH NAME
Scripts for running parallel packages under LSF.
.SH DESCRIPTION
These scripts allow you to run your parallel packages
under LSF. With these scripts, you no longer need to worry about editing
the host file that is required by many packages. If you use the PVM parallel
programming system, you no longer need to worry
about starting or terminating the PVM daemons before and after the job
execution. The scripts handle all these things for you.
.PP
The scripts require the environment variable \fBLSB_HOSTS\fR. This is
the list of host names that are allocated to run the parallel job. If
you are using LSF Batch, the batch system automatically sets this variable
before running the script. If you run parallel jobs interactively, you need to
set this variable explicitly. See below for details.
.PP
You can easily change these scripts to support parallel packages that
are not mentioned in these man pages. The script for running p4 jobs
can also be used to run TCGMSG (another message passing library) jobs.
.SH RUNNING PARALLEL JOBS UNDER LSF BATCH
LSF Batch has a generic interface for users to submit parallel jobs. Parallel
applications written with LSF API do not need to use the scripts described
here. They must be able to be submitted directly by using the bsub(1)
command. To submit parallel jobs written with existing message passing
libraries, use one of the scripts described here, or write a similar
script to interface with LSF Batch. For example,
to submit a pvm job
\fBmyjob\fR,
type
.br
\fBbsub [otheroptions] -n k pvmjob myjob [args ....]\fR
.LP
where k is the number of hosts to use and pvmjob is the script for running a
pvm job. To submit a p4 job, type
.br
\fBbsub [otheroptions] -n k p4job myjob [args ....]\fR
.LP
where p4job is the script for running a p4 (another message passing library)
job. \fBotheroptions\fR include all the options supported by \fBbsub\fR(1),
such as resource requirement, preferred queue name, and so on.
.LP
When a batch queue is configured to allow job requeueing, mpijob and
poejob will  requeue the jobs when allocated nodes are not
usable by the application.  This situation sometimes occurs 
in the IBM SP2's POE environment.  So mpijob and poejob would check
to see whether the environment variable \fBLSB_EXIT_REQUEUE\fR is set.  If
so,  mpijob and poejob would exit with the first value defined in
\fBREQUEUE_EXIT_VALUES\fR.  
.SH RUNNING PARALLEL JOBS INTERACTIVELY
You can run parallel jobs on the least loaded hosts if you use LSF. To run a
pvm job interactively, type
.br
\fBsetenv LSB_HOSTS "`lsplace [otheroptions] -n k`"; pvmjob myjob [args ....]\fR
.LP
where k is the number of hosts to use. The command lsplace(1) is a standard
LSF tool to select best hosts that satisfy your requirements. Similarly,
to run a p4 job interactively, type
.br
\fBsetenv LSB_HOSTS "`lsplace [otheroptions] -n k`"; p4job myjob [args ....]\fR
.PP
Note that the scripts \fBmyjob\fR and \fBp4job\fR already handle the
host file creation and deletion automatically.
.SH LIMITATIONS
These scripts do not handle the cases where different nodes need to run
different programs. You have to change the scripts to fit such need.
