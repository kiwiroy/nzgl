#!/bin/bash

log_dir='/var/log/biomatters/report'
mail_to='carl@biomatters.com'

function usage() {
	cat << EOF
Usage: ${0} [-d] [-m] [-t <date>]

	-d Daily report
	-m Monthly report
	-t Use provided date rather than today YYYY-MM-DD
	   (for viewing previous day/months reports)

	Either daily (-d) or monthly (-m) must be specified.
EOF
}

while getopts dmt: flag; do
        case $flag in
                d)
                        type='daily'
                        ;;
                m)
			type='monthly'
			;;
		t)
			date=${OPTARG}
			;;
		?)
			usage
			exit 1
	esac
done

if [ -z "${type}" ]; then
	type="daily"
fi

# Default to todays date
[ -z "${date}" ] && date=$(date +%Y-%m-%d)

if [ "$(date -d ${date} +%Y-%m-%d)" != "${date}" ]; then
	usage
	exit 1
fi

# Find logs to parse

if [ "${type}" == "daily" ]; then
	logs="${date}.log"
else
	year=$(date -d ${date} +%Y)
	month=$(date -d ${date} +%m)
	logs=$(find ${log_dir} -maxdepth 1 -type f -name "2012-11-*" -printf '%f\n')
fi

# Parse

all_redhat_updates=''
all_upstream_updates=''
all_failed_tests=''

for log in ${logs}; do
	[ ! -e ${log_dir}/${log} ] && continue
	unset redhat_updates
	unset upstream_updated
	unset failed_tests

	source ${log_dir}/${log}

	all_redhat_updates="${all_redhat_updates} ${redhat_updates}"
	all_upstream_updates="${all_upstream_updates} ${upstream_updates}"
	all_failed_tests="${all_failed_tests} ${failed_tests}"
done

# Sort, place into array
all_redhat_updates=($(echo "${all_redhat_updates}" | sed 's/ /\n/g' | sort -n | uniq))
all_upstream_updates=($(echo "${all_upstream_updates}" | sed 's/ /\n/g' | sort -n | uniq))
all_failed_tests=($(echo "${all_failed_tests}" | sort -n | sed 's/ /\n/g' | uniq))

if [ ${#all_redhat_updates[@]} -gt 0 ] || [ ${#all_upstream_updates[@]} -gt 0 ] || [ ${#all_failed_tests[@]} -gt 0 ]; then
	action_required=''
else
	action_required='no '
fi

if [ "${type}" == "daily" ]; then 
	mail_subject="Daily report for ${date} (${action_required}action required)"
else
	mail_subject="Monthly report for ${year}-${month} (${action_required}action required)"
fi

{
cat << END
${mail_subject}

RedHat Updates (${#all_redhat_updates[@]})
${all_redhat_updates[@]}

Upstream Updates (${#all_upstream_updates[@]})
${all_upstream_updates}

Failed Tests (${#all_failed_tests[@]})
${all_failed_tests[@]}
END

} |  mail -s "${mail_subject}" ${mail_to}
